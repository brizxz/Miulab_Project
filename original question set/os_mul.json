{
    "questions": [
      {
        "question": "Consider the following snapshot of a system running n processes. Process i is holding Xi instances of a resource R, 1 <= i <= n. currently, all instances of R are occupied. Further, for all i, process i has placed a request for an additional Yi instances while holding the Xi instances it already has. There are exactly two processes p and q such that Yp = Yq = 0. Which one of the following can serve as a necessary condition to guarantee that the system is not approaching a deadlock?",
        "options": [
          "min (Xp, Xq) < max (Yk) where k != p and k != q",
          "Xp + Xq >= min (Yk) where k != p and k != q",
          "max (Xp, Xq) > 1",
          "min (Xp, Xq) > 1"
        ],
        "answer": "2"
      },
      {
        "question": "Consider the following proposed solution for the critical section problem. There are n processes: P0 ...Pn−1. In the code, function pmax returns an integer not smaller than any of its arguments. For all i, t[i] is initialized to zero.\n\ndo {\n    c[i] = 1;\n    t[i] = pmax(t[0], ..., t[n-1]) + 1;\n    c[i] = 0;\n\n    for every j ≠ i in {0, ..., n-1} {\n        while (c[j]);\n        while (t[j] != 0 && t[j] < t[i]);\n    }\n\n    // Critical Section\n    t[i] = 0;\n    // Remainder Section\n} while (true);\n\nWhich one of the following is TRUE about the above solution?",
        "options": [
          "At most one process can be in the critical section at any time",
          "The bounded wait condition is satisfied",
          "The progress condition is satisfied",
          "It cannot cause a deadlock"
        ],
        "answer": "1"
      },
      {
        "question": "Three concurrent processes X, Y, and Z execute three different code segments that access and update certain shared variables. Process X executes the P operation (i.e., wait) on semaphores a, b and c; process Y executes the P operation on semaphores b, c and d; process Z executes the P operation on semaphores c, d, and a before entering the respective code segments. After completing the execution of its code segment, each process invokes the V operation (i.e., signal) on its three semaphores. All semaphores are binary semaphores initialized to one. Which one of the following represents a deadlock-free order of invoking the P operations by the processes? (GATE CS 2013)",
        "options": [
          "X: P(a)P(b)P(c) Y:P(b)P(c)P(d) Z:P(c)P(d)P(a)",
          "X: P(b)P(a)P(c) Y:P(b)P(c)P(d) Z:P(a)P(c)P(d)",
          "X: P(b)P(a)P(c) Y:P(c)P(b)P(d) Z:P(a)P(c)P(d)",
          "X: P(a)P(b)P(c) Y:P(c)P(b)P(d) Z:P(c)P(d)P(a)"
        ],
        "answer": "2"
      },
      {
        "question": "A system has n resources R0,...,Rn-1, and k processes P0,....Pk-1. The implementation of the resource request logic of each process Pi is as follows:\n\nif (i % 2 == 0) {\n    if (i < n) request Ri\n    if (i+2 < n) request Ri+2\n} else {\n    if (i < n) request Rn-i\n    if (i+2 < n) request Rn-i-2\n}\n\nIn which one of the following situations is a deadlock possible?",
        "options": [
          "n=40, k=26",
          "n=21, k=12",
          "n=20, k=10",
          "n=41, k=19"
        ],
        "answer": "1"
      },
      {
        "question": "Consider the following solution to the producer-consumer synchronization problem. The shared buffer size is N. Three semaphores empty, full and mutex are defined with respective initial values of 0, N and 1. Semaphore empty denotes the number of available slots in the buffer, for the consumer to read from. Semaphore full denotes the number of available slots in the buffer, for the producer to write to. The placeholder variables, denoted by P, Q, R and S, in the code below can be assigned either empty or full. The valid semaphore operations are: wait() and signal().\n\nproducer:\ndo {\n    wait(P);\n    wait(mutex);\n    // Add item to buffer\n    signal(mutex);\n    signal(Q);\n} while(1);\n\nconsumer:\ndo {\n    wait(R);\n    wait(mutex);\n    // Consume item from buffer\n    signal(mutex);\n    signal(S);\n} while(1);\n\nWhich one of the following assignments to P, Q, R and S will yield the correct solution?",
        "options": [
          "P: full, Q: full, R: empty, S: empty",
          "P: empty, Q: empty, R: full, S: full",
          "P: full, Q: empty, R: empty, S: full",
          "P: empty, Q: full, R: full, S: empty"
        ],
        "answer": "3"
      },
      {
        "question": "A computer uses 46–bit virtual address, 32–bit physical address, and a three–level paged page table organization. The page table base register stores the base address of the first–level table (T1), which occupies exactly one page. Each entry of T1 stores the base address of a page of the second–level table (T2). Each entry of T2 stores the base address of a page of the third–level table (T3). Each entry of T3 stores a page table entry (PTE). The PTE is 32 bits in size. The processor used in the computer has a 1 MB 16 way set associative virtually indexed physically tagged cache. The cache block size is 64 bytes. What is the size of a page in KB in this computer?",
        "options": [
          "2",
          "4",
          "8",
          "16"
        ],
        "answer": "3"
      },
      {
        "question": "Three processes A, B and C each execute a loop of 100 iterations. In each iteration of the loop, a process performs a single computation that requires tc CPU milliseconds and then initiates a single I/O operation that lasts for tio milliseconds. It is assumed that the computer where the processes execute has sufficient number of I/O devices and the OS of the computer assigns different I/O devices to each process. Also, the scheduling overhead of the OS is negligible. The processes have the following characteristics:\n\nProcess id      tc           tio\nA        100 ms    500 ms\nB        350 ms    500 ms\nC        200 ms    500 ms\n\nThe processes A, B, and C are started at times 0, 5 and 10 milliseconds respectively, in a pure time sharing system (round robin scheduling) that uses a time slice of 50 milliseconds. The time in milliseconds at which process C would complete its first I/O operation is ___________.",
        "options": [
          "500",
          "1000",
          "2000",
          "10000"
        ],
        "answer": "2"
      },
      {
        "question": "Two concurrent processes P1 and P2 use four shared resources R1, R2, R3 and R4, as shown below.\n\nP1: Compute; Use R1; Use R2; Use R3; Use R4;\nP2: Compute; Use R1; Use R2; Use R3; Use R4;\n\nBoth processes are started at the same time, and each resource can be accessed by only one process at a time. The following scheduling constraints exist between the access of resources by the processes:\n\nP2 must complete use of R1 before P1 gets access to R1.\nP1 must complete use of R2 before P2 gets access to R2.\nP2 must complete use of R3 before P1 gets access to R3.\nP1 must complete use of R4 before P2 gets access to R4.\n\nThere are no other scheduling constraints between the processes. If only binary semaphores are used to enforce the above scheduling constraints, what is the minimum number of binary semaphores needed?",
        "options": [
          "1",
          "2",
          "3",
          "4"
        ],
        "answer": "2"
      },
      {
        "question": "A system has four processes and five allocatable resources. The current allocation and maximum needs are as follows:\n\nAllocated     Maximum        Available\nProcess A     1 0 2 1 1       1 1 2 1 3      0 0 x 1 1\nProcess B     2 0 1 1 0       2 2 2 1 0\nProcess C     1 1 0 1 0       2 1 3 1 0\nProcess D     1 1 1 1 0       1 1 2 2 1\n\nThe smallest value of x for which the above system in a safe state is __________.",
        "options": [
          "1",
          "3",
          "2",
          "Not safe for any value of x."
        ],
        "answer": "4"
      },
      {
        "question": "Consider a paging system that uses 1-level page table residing in main memory and a TLB for address translation. Each main memory access takes 100 ns and TLB lookup takes 20 ns. Each page transfer to/from the disk takes 5000 ns. Assume that the TLB hit ratio is 95%, page fault rate is 10%. Assume that for 20% of the total page faults, a dirty page has to be written back to disk before the required page is read from disk. TLB update time is negligible. The average memory access time in ns (round off to 1 decimal places) is ___________.",
        "options": [
          "154.5",
          "155",
          "755",
          "725"
        ],
        "answer": "1"
      }
    ]
  }
  